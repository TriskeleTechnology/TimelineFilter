import powerbi from "powerbi-visuals-api";
import ITooltipService = powerbi.extensibility.ITooltipService;
import { ILocalVisualStorageService } from "./mockIStorageService";
import { MockILocale } from "./mockILocale";
import { MockIAllowInteractions } from "./mockIAllowInteractions";
import VisualObjectInstancesToPersist = powerbi.VisualObjectInstancesToPersist;
import ISelectionIdBuilder = powerbi.visuals.ISelectionIdBuilder;
import ISelectionManager = powerbi.extensibility.ISelectionManager;
import IColorPalette = powerbi.extensibility.ISandboxExtendedColorPalette;
import IVisualEventService = powerbi.extensibility.IVisualEventService;
import IVisualHost = powerbi.extensibility.visual.IVisualHost;
export declare class MockIVisualHost implements IVisualHost {
    private colorPaletteInstance;
    private selectionManager;
    private tooltipServiceInstance;
    private localeInstance;
    private allowInteractionsInstance;
    private localizationManager;
    private telemetryService;
    private authService;
    private localStorageService;
    private visualEventService;
    constructor(colorPalette?: IColorPalette, selectionManager?: ISelectionManager, tooltipServiceInstance?: ITooltipService, localeInstance?: MockILocale, allowInteractionsInstance?: MockIAllowInteractions, localizationManager?: powerbi.extensibility.ILocalizationManager, telemetryService?: powerbi.extensibility.ITelemetryService, authService?: powerbi.extensibility.IAuthenticationService, storageService?: ILocalVisualStorageService, eventService?: IVisualEventService);
    createSelectionIdBuilder(): ISelectionIdBuilder;
    createSelectionManager(): ISelectionManager;
    get colorPalette(): IColorPalette;
    get locale(): string;
    set locale(language: string);
    applyJsonFilter(filter: powerbi.IFilter, objectName: string, propertyName: string, action: powerbi.FilterAction): void;
    get telemetry(): powerbi.extensibility.ITelemetryService;
    get authenticationService(): any;
    persistProperties(changes: VisualObjectInstancesToPersist): void;
    get tooltipService(): ITooltipService;
    get allowInteractions(): boolean;
    launchUrl(url: string): void;
    get storageService(): ILocalVisualStorageService;
    get eventService(): IVisualEventService;
    get instanceId(): string;
    fetchMoreData(): boolean;
    refreshHostData(): void;
    createLocalizationManager(): powerbi.extensibility.ILocalizationManager;
    switchFocusModeState: (on: boolean) => void;
    hostEnv: powerbi.common.CustomVisualHostEnv;
}
